name: CI

on: [ pull_request, push ]

jobs:
  test:
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        java: [ 17, 18, 21 ]
    name: Test JDK
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 21
          java-package: 'jdk'
          distribution: 'temurin'
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          java-package: 'jdk'
          distribution: 'temurin'

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
#      - uses: actions/setup-java@v3
#        with:
#          java-version: ${{ matrix.java }}
#          java-package: 'jdk'
#          distribution: 'temurin'
#          cache: 'gradle'
#      - name: Build
#        run: ./gradlew build
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-jdk
          path: build/test-results/
      - name: Upload Unit Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-jdk
          path: build/reports/tests/

  webui:
    runs-on: ubuntu-latest
    name: Test webui builds
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          java-package: 'jdk'
          distribution: 'temurin'
      - name: npm Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: npmBuild
#      - name: npm build
#        run: ./gradlew npmBuild

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [ test, webui ]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            src/jelu-ui/package-lock.json
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          java-package: 'jdk'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Install dependencies
        run: npm install --only=production
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
